package br.com.ehmf.AppPessoas.service;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import br.com.ehmf.AppPessoas.model.Contato;
import br.com.ehmf.AppPessoas.model.Pessoa;
import br.com.ehmf.AppPessoas.repository.ContatoRepository;
import br.com.ehmf.AppPessoas.repository.PessoaRepository;

@Service
public class ContatoService {

	@Autowired
	private ContatoRepository contatoRepository;
	
	private PessoaRepository pessoaRepository;
	
	public Contato save(Contato contato) {
		
		//verificar se pessoa existe, caso avisar:
		if(contato.getPessoa().getId() !=null) {
			//Buscar a pessoa no BD:
			Optional<Pessoa> findPessoas = pessoaRepository.findById(contato.getPessoa().getId());
			if(findPessoas.isEmpty()) {
				System.out.println("Pessoa n√£o encontrada");
				return null;
			}else {
				contato.setPessoa(findPessoas.get());
				return contatoRepository.save(contato);
			}
		}else {
			System.out.print("Pessoa nula");
			return null;
		}
		
	}
	public Optional<Contato>findById(Long id){
		return contatoRepository.findById(id);
		
	}
	public List<Contato> findAll(){
		return contatoRepository.findAll();
		
	}
	public Contato update(Contato contato) {
		Optional<Contato>findContato = contatoRepository
				.findById(contato.getId());
		//se existir, atualizar:
		if(findContato.isPresent()) {
			Contato updContato = findContato.get();
			updContato.setContato(contato.getContato());
			//gravar no banco
			return contatoRepository.save(updContato);
			
		}
		
		return contatoRepository.save(contato);
		
	}
	public void delete(Long id) {
		contatoRepository.deleteById(id);
		
	}
}
